[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "coinbase-agentkit-mcp"
dynamic = ["version"]
description = "Model Context Protocol (MCP) extension for Coinbase AgentKit"
readme = "README.md"
requires-python = ">=3.8"
license = "Apache-2.0"
keywords = ["agentkit", "mcp", "claude", "ai", "blockchain", "coinbase"]
authors = [{ name = "Coinbase Inc." }]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "coinbase-agentkit>=0.1.0",
    "mcp>=0.5.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
]

[project.urls]
Documentation = "https://github.com/coinbase/agentkit#readme"
Issues = "https://github.com/coinbase/agentkit/issues"
Source = "https://github.com/coinbase/agentkit"

[project.scripts]
agentkit-mcp-server = "coinbase_agentkit_mcp.server:main"

[tool.hatch.version]
path = "coinbase_agentkit_mcp/__init__.py"

[tool.hatch.envs.default]
dependencies = [
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "black",
    "ruff",
    "mypy",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
style = ["black --check --diff .", "ruff check ."]
fmt = ["black .", "ruff check --fix ."]
typing = "mypy --install-types --non-interactive {args:coinbase_agentkit_mcp tests}"
all = ["style", "typing", "test"]
cov = "pytest --cov=coinbase_agentkit_mcp {args:tests}"

[tool.ruff]
target-version = "py38"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long
    "B008", # do not perform function calls in argument defaults
]

[tool.black]
target-version = ["py38"]
line-length = 100

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_context = true