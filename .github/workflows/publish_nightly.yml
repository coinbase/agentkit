name: Publish Nightly Builds

on:
  workflow_dispatch:
  schedule:
    - cron: "0 21 * * *" # Run daily at 9 PM UTC / 5 PM EST

permissions:
  contents: read

jobs:
  publish-npm-nightly:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    environment: npm
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

      - name: Setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda
        with:
          version: 10

      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"
          cache: "pnpm"
          cache-dependency-path: ./typescript

      - name: Install, build and publish
        working-directory: ./typescript
        run: |
          pnpm install --frozen-lockfile
          pnpm run build
          pnpm changeset version --snapshot nightly
          pnpm changeset publish --tag nightly
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-pypi-nightly:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package:
          - coinbase-agentkit
          - create-onchain-agent
          - framework-extensions/langchain
          - framework-extensions/openai-agents-sdk
    environment:
      name: pypi
      url: https://pypi.org/p/coinbase-agentkit-langchain
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

      - uses: actions/setup-python@7f4fc3e22c37d6ff65e88745f38bd3157c663f7c # v4.9.1
        with:
          python-version: "3.10"

      - name: Install jq
        run: sudo apt-get install jq

      - name: Install uv
        uses: astral-sh/setup-uv@d4b2f3b6ecc6e67c4457f6d3e41ec42d3d0fcb86 # v5.4.2
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Version and Build Python package versions
        run: |
          cd "python/${{ matrix.package }}"
          PKG_NAME=$(grep -m 1 '^name = ' pyproject.toml | cut -d '"' -f2)
          CURRENT_VERSION=$(sed -n 's/^version = "\(.*\)"/\1/p' pyproject.toml)

          if [[ $CURRENT_VERSION == *".dev"* ]]; then
            NEXT_VERSION=$(echo $CURRENT_VERSION | sed -E 's/\.dev[0-9]+$//')
          else
            MAJOR=$(echo $CURRENT_VERSION | cut -d. -f1)
            MINOR=$(echo $CURRENT_VERSION | cut -d. -f2)
            PATCH=$(echo $CURRENT_VERSION | cut -d. -f3 | cut -d- -f1 | cut -d+ -f1)
            NEXT_VERSION="${MAJOR}.${MINOR}.$((PATCH + 1))"
          fi

          TODAY=$(date +%Y%m%d)
          ALL_VERSIONS=$(curl -s "https://pypi.org/pypi/$PKG_NAME/json" | jq -r '.releases | keys[]')
          LATEST_NIGHTLY=$(echo "$ALL_VERSIONS" | grep -E "^${NEXT_VERSION}\.dev${TODAY}[0-9]$" | sort -V | tail -n1 || echo "")

          if [ -z "$LATEST_NIGHTLY" ]; then
            sed -i 's/^version=".*"/version = "'${NEXT_VERSION}.dev${TODAY}0'"/' pyproject.toml
          else
            BUILD_NUM=$(echo $LATEST_NIGHTLY | sed -E "s/.*\.dev${TODAY}([0-9])$/\1/")
            NEXT_BUILD=$((BUILD_NUM + 1))
            sed -i 's/^version=".*"/version = "'${NEXT_VERSION}.dev${TODAY}${NEXT_BUILD}'"/' pyproject.toml
          fi

          uv sync
          uv build

      - name: Publish Python packages
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # release/v1
        with:
          packages-dir: python/${{ matrix.package }}/dist/
